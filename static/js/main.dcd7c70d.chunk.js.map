{"version":3,"sources":["models/LocalStorage.js","models/SocrataApi.js","models/MonthlySearch.js","models/MonthlySearchesApi.js","components/SearchesList.js","models/Util.js","components/YearSelect.js","components/SearchesFilter.js","App.js","serviceWorker.js","index.js"],"names":["LocalStorage","window","localStorage","console","error","appData","getItem","JSON","parse","key","this","getJSON","value","setItem","stringify","SocrataApi","appToken","baseUrl","Object","classCallCheck","query","concat","jsonFormatter","url","urlFor","cachedUrls","get","cachedResponses","today","Date","dateFetched","d1","d2","Math","abs","getTime","log","fetch","method","headers","Content-Type","X-App-Token","response","json","set","MonthlySearch","data","query_count","count","parseInt","query_text","year","month","month_name","name","toLowerCase","monthForName","otherSearch","dateA","date","dateB","criteria","matchesYear","toString","apiUrl","MonthlySearchesApi","possibleConstructorReturn","getPrototypeOf","call","order","encodeURIComponent","dataFormatter","rows","map","row","sort","a","b","compareDate","renderDate","monthlySearch","original","react_default","createElement","className","sortByDate","searchA","searchB","SearchesList","monthlySearches","props","length","es","filterable","columns","Header","accessor","headerClassName","minWidth","id","d","Cell","sortMethod","pageSize","showPageSizeOptions","Component","Util","list","hash","keyFor","item","originalItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","keys","YearSelect","onChange","event","_this","target","_this$props","allYears","selectedYear","years","uniq","reverse","htmlFor","filter","otherYear","displayName","SearchesFilter","onYearChange","search","components_YearSelect","yearKey","App","filterMonthlySearches","matches","onDataLoaded","setState","prevState","isLoading","filteredMonthlySearches","state","Config","socrataApi","getMonthlySearches","then","_this$state","components_SearchesFilter","src_components_SearchesList","rel","href","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcd7c70d.chunk.js","sourcesContent":["const localStorageKey = 'nash-hot-searches';\n\nclass LocalStorage {\n  static getJSON() {\n    if (!window.localStorage) {\n      console.error('browser does not support local storage');\n      return {};\n    }\n\n    const appData = window.localStorage.getItem(localStorageKey) || \"{}\";\n    return JSON.parse(appData);\n  }\n\n  static get(key) {\n    const appData = this.getJSON();\n    return appData[key];\n  }\n\n  static set(key, value) {\n    const appData = this.getJSON();\n    appData[key] = value;\n    window.localStorage.setItem(localStorageKey, JSON.stringify(appData));\n  }\n\n  static delete(key) {\n    const appData = this.getJSON();\n    delete appData[key];\n    window.localStorage.setItem(localStorageKey, JSON.stringify(appData));\n  }\n}\n\nexport default LocalStorage;\n","import LocalStorage from './LocalStorage';\n\nconst cachedUrlsKey = 'cached-urls';\nconst cachedResponsesKey = 'cached-responses';\n\nconst daysBetween = function(d1, d2) {\n  const diff = Math.abs(d1.getTime() - d2.getTime());\n  return diff / (1000 * 60 * 60 * 24);\n};\n\nclass SocrataApi {\n  constructor(appToken, baseUrl) {\n    this.appToken = appToken;\n    this.baseUrl = baseUrl;\n  }\n\n  urlFor(query) {\n    return `${this.baseUrl}${query || ''}`;\n  }\n\n  async get(query, jsonFormatter) {\n    const url = this.urlFor(query);\n    const cachedUrls = LocalStorage.get(cachedUrlsKey) || {};\n    const cachedResponses = LocalStorage.get(cachedResponsesKey) || {};\n    const today = new Date();\n\n    if (cachedUrls[url]) {\n      const dateFetched = new Date(cachedUrls[url]);\n      if (daysBetween(today, dateFetched) <= 1) {\n        console.log('using cached data for', url);\n        return cachedResponses[url];\n      }\n    }\n\n    console.log('GET', url);\n    const response = await window.fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-App-Token': this.appToken\n      }\n    })\n    const json = await response.json();\n    cachedResponses[url] = jsonFormatter(json);\n    cachedUrls[url] = today;\n    LocalStorage.set(cachedUrlsKey, cachedUrls);\n    LocalStorage.set(cachedResponsesKey, cachedResponses);\n    return cachedResponses[url];\n  }\n}\n\nexport default SocrataApi;\n","const monthForName = name => {\n  switch (name.toLowerCase()) {\n    case 'january': return 0;\n    case 'february': return 1;\n    case 'march': return 2;\n    case 'april': return 3;\n    case 'may': return 4;\n    case 'june': return 5;\n    case 'july': return 6;\n    case 'august': return 7;\n    case 'september': return 8;\n    case 'october': return 9;\n    case 'november': return 10;\n    default: return 11;\n  }\n};\n\nclass MonthlySearch {\n  constructor(data) {\n    if (data.query_count) {\n      this.count = parseInt(data.query_count, 10);\n    } else {\n      this.count = data.count;\n    }\n    this.query = data.query_text || data.query;\n    this.year = parseInt(data.year, 10);\n    this.month = data.month_name || data.month;\n  }\n\n  date() {\n    if (this.year && this.month) {\n      return new Date(this.year, monthForName(this.month), 1);\n    }\n  }\n\n  compareDate(otherSearch) {\n    const dateA = this.date();\n    const dateB = otherSearch.date();\n\n    if (dateA < dateB) {\n      return -1;\n    }\n\n    return dateA > dateB ? 1 : 0;\n  };\n\n  matches(criteria) {\n    const { year } = criteria;\n    return this.matchesYear(year);\n  }\n\n  matchesYear(year) {\n    return (year && this.year.toString() === year) || year === 'all';\n  }\n}\n\nexport default MonthlySearch;\n","import SocrataApi from './SocrataApi';\nimport MonthlySearch from './MonthlySearch';\n\nconst apiUrl = 'https://data.nashville.gov/resource/fuaa-r5cm.json';\n\n// https://data.nashville.gov/Public-Services/Nashville-gov-Top-500-Monthly-Searches/fuaa-r5cm\nclass MonthlySearchesApi extends SocrataApi {\n  constructor(appToken) {\n    super(appToken, apiUrl);\n  }\n\n  async getMonthlySearches() {\n    const order = encodeURIComponent('year DESC');\n    const query = `?$limit=50000&$order=${order}`;\n    const dataFormatter = rows => rows.map(row => new MonthlySearch(row));\n    const rows = await this.get(query, dataFormatter);\n    return rows.map(row => new MonthlySearch(row))\n               .sort((a, b) => b.compareDate(a));\n  }\n}\n\nexport default MonthlySearchesApi;\n","import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport './SearchesList.css';\n\nconst renderDate = row => {\n  const monthlySearch = row.original;\n  return <div className=\"text-center\">{monthlySearch.month} {monthlySearch.year}</div>;\n};\n\nconst sortByDate = (searchA, searchB) => {\n  return searchA.compareDate(searchB);\n};\n\nclass SearchesList extends Component {\n  render() {\n    const { monthlySearches } = this.props;\n\n    if (monthlySearches.length < 1) {\n      return null;\n    }\n\n    return (\n      <ReactTable\n        filterable\n        data={monthlySearches}\n        columns={[\n          {\n            Header: 'Query',\n            accessor: 'query',\n            headerClassName: 'text-bold',\n            minWidth: 170\n          },\n          {\n            Header: 'Count',\n            accessor: 'count',\n            filterable: false,\n            headerClassName: 'text-bold',\n            minWidth: 170\n          },\n          {\n            Header: 'Date',\n            id: 'date',\n            filterable: false,\n            accessor: d => d,\n            headerClassName: 'text-bold',\n            Cell: renderDate,\n            minWidth: 170,\n            sortMethod: sortByDate\n          }\n        ]}\n        pageSize={10}\n        showPageSizeOptions={false}\n        className=\"-striped -highlight searches-list\"\n      />\n    );\n  }\n}\n\nexport default SearchesList;\n","class Util {\n  static uniq(list) {\n    if (!list) {\n      return list;\n    }\n\n    const hash = {};\n    const keyFor = item => item.toString();\n    const originalItems = {};\n\n    for (const item of list) {\n      const key = keyFor(item);\n      originalItems[key] = item;\n      hash[key] = 1;\n    }\n\n    const keysToKeep = Object.keys(hash);\n    return keysToKeep.map(key => originalItems[key]);\n  }\n}\n\nexport default Util;\n","import React, { Component } from 'react';\nimport Util from '../models/Util';\n\nconst displayName = function(year, allYears) {\n  const count = allYears.filter(otherYear => otherYear.toString() === year.toString()).length;\n  return `${year} (${count})`;\n};\n\nclass YearSelect extends Component {\n  onChange = event => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    const { allYears, selectedYear } = this.props;\n    const years = Util.uniq(allYears.sort()).reverse();\n\n    return (\n      <div>\n        <label\n          htmlFor=\"year\"\n          className=\"mr-1\"\n        >Year:</label>\n        <select\n          id=\"year\"\n          className=\"form-select\"\n          onChange={this.onChange}\n          value={selectedYear}\n        >\n          <option value=\"all\">All</option>\n          {years.map(year => (\n            <option value={year} key={year}>{displayName(year, allYears)}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default YearSelect;\n","import React, { Component } from 'react';\nimport YearSelect from './YearSelect';\n\nclass SearchesFilter extends Component {\n  render() {\n    const { monthlySearches, onYearChange, year } = this.props;\n    const allYears = monthlySearches.map(search => search.year);\n\n    return (\n      <form\n        className=\"flex-auto flex-justify-end d-flex flex-items-center\"\n      >\n        <YearSelect\n          onChange={onYearChange}\n          selectedYear={year}\n          allYears={allYears}\n        />\n      </form>\n    );\n  }\n}\n\nexport default SearchesFilter;\n","import React, { Component } from 'react';\nimport LocalStorage from './models/LocalStorage';\nimport MonthlySearchesApi from './models/MonthlySearchesApi';\nimport SearchesList from './components/SearchesList';\nimport SearchesFilter from './components/SearchesFilter';\nimport Config from './config.json';\nimport './App.css';\n\nconst yearKey = 'year';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monthlySearches: [],\n      isLoading: true,\n      filteredMonthlySearches: []\n    };\n  }\n\n  componentDidMount() {\n    const api = new MonthlySearchesApi(Config.socrataApi.appToken);\n    api.getMonthlySearches().then(this.onDataLoaded);\n  }\n\n  filterMonthlySearches = (monthlySearches, criteria) => {\n    return monthlySearches.filter(search => search.matches(criteria));\n  };\n\n  onDataLoaded = monthlySearches => {\n    this.setState(prevState => {\n      const year = LocalStorage.get(yearKey) || prevState.year || 'all';\n\n      return {\n        monthlySearches,\n        isLoading: false,\n        year,\n        filteredMonthlySearches: this.filterMonthlySearches(monthlySearches, { year })\n      };\n    });\n  };\n\n  onYearChange = year => {\n    LocalStorage.set(yearKey, year);\n\n    this.setState(prevState => ({\n      year,\n      filteredMonthlySearches: this.filterMonthlySearches(\n        prevState.monthlySearches, { year }\n      )\n    }));\n  };\n\n  render() {\n    const { filteredMonthlySearches, monthlySearches, isLoading,\n            year } = this.state;\n\n    return (\n      <div>\n        <header className=\"site-header\">\n          <div className=\"container-lg py-2 d-flex flex-items-center flex-justify-between\">\n            <h1\n              className=\"f3 text-normal\"\n            >Nashville.gov Top Searches</h1>\n            {isLoading ? null : (\n              <SearchesFilter\n                monthlySearches={monthlySearches}\n                onYearChange={this.onYearChange}\n                year={year}\n              />\n            )}\n          </div>\n        </header>\n        <main className=\"site-main\">\n          <div className=\"container-lg\">\n            <SearchesList\n              monthlySearches={filteredMonthlySearches}\n            />\n          </div>\n        </main>\n        <footer className=\"site-footer\">\n          <div className=\"container-lg text-small py-1 d-flex flex-items-center flex-justify-between\">\n            <span>\n              Data from <a\n                target=\"_blank\"\n                className=\"link-gray\"\n                rel=\"noopener noreferrer\"\n                href=\"https://data.nashville.gov/Public-Services/Nashville-gov-Top-500-Monthly-Searches/fuaa-r5cm\"\n              >Nashville.gov - Top 500 Monthly Searches</a>\n            </span>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}